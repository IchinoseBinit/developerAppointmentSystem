#BlueJ class context
comment0.target=JuniorDeveloper
comment0.text=\r\n\ This\ is\ a\ class\ Junior\ Developer\ which\ inherits\ the\ Developer\ class.\r\n\ It\ has\ the\ get\ methods\ for\ every\ attributes\ and\ a\ set\ method\ for\ salary.\r\n\ It\ also\ has\ a\ appoint\ developer\ method\ which\ appoints\ the\ developer.\r\n\ It\ also\ has\ a\ display\ method\ which\ displays\ the\ details\ of\ the\ developer\ class\ and\ then\ the\ other\ details\ of\ the\ junior\ developer\ class.\r\n\ \r\n\ @author\ (Binit\ Koirala)\r\n\ @ID\ Number\ (18028891)\r\n
comment1.params=platform\ interviewerName\ workingHours\ salary\ appointedBy\ terminationDate
comment1.target=JuniorDeveloper(java.lang.String,\ java.lang.String,\ double,\ int,\ java.lang.String,\ java.lang.String)
comment1.text=\r\n\ The\ following\ is\ the\ constructor\ of\ this\ class.\r\n\ It\ is\ used\ to\ pass\ the\ parameter\ platform,\ interviewer\ name\ and\ working\ hours\ to\ the\ super\ class\ constructor.\r\n\ The\ parameters\ are\ passed\ to\ the\ super\ class\ constructor\ by\ calling\ or\ invoking\ them\ using\ 'super'\ keyword.\r\n\ It\ accepts\ other\ parameters\ and\ updates\ the\ variables\ of\ this\ class\ using\ 'this'\ keyword.\r\n\ The\ other\ variables\ are\ manually\ updated\ using\ empty\ string\ or\ 0.0\ and\ boolean\ is\ initialized\ to\ false.\r\n
comment10.params=developerName\ appointedDate\ terminationDate\ specialization
comment10.target=void\ appointDeveloper(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String)
comment10.text=\r\n\ This\ is\ a\ method\ to\ appoint\ developer.\r\n\ This\ method\ takes\ parameters\ and\ passes\ the\ parameter\ developerName\ to\ the\ parent\ class.\r\n\ It\ sets\ the\ developer\ name\ using\ set\ method\ of\ developer\ name.\ \r\n\ The\ other\ parameters\ are\ passed\ to\ the\ variables\ of\ the\ same\ class\ using\ 'this'\ keyword.\r\n\ If\ the\ developer\ name\ is\ set\ using\ set\ method,\ the\ boolean\ joined\ value\ gets\ true.\r\n\ If\ the\ program\ is\ again\ invoked,\ it\ checks\ the\ second\ condition\ and\ shows\ the\ developer\ name\ and\ appointed\ date.\r\n
comment11.params=
comment11.target=void\ display()
comment11.text=\r\n\ This\ is\ a\ method\ of\ the\ Junior\ Developer\ class\ to\ display\ or\ show\ the\ output.\r\n\ This\ method\ prints\ the\ developer\ class\ display\ method\ first.\r\n\ The\ display\ method\ of\ the\ developer\ class\ is\ called\ through\ 'super'\ keyword.\r\n\ Similarly,\ if\ the\ boolean\ joined\ is\ true,\ the\ other\ messages\ are\ displayed\ in\ an\ annotated\ way.\r\n
comment2.params=
comment2.target=int\ getSalary()
comment2.text=\r\n\ This\ is\ a\ get\ method\ of\ the\ variable\ salary.\r\n\ It\ returns\ the\ value\ of\ salary\ if\ the\ get\ method\ is\ called\ in\ other\ classes\ or\ subclasses.\r\n\ It\ returns\ the\ value\ of\ same\ datatype\ i.e.\ integer.\r\n
comment3.params=
comment3.target=java.lang.String\ getAppointedDate()
comment3.text=\r\n\ This\ is\ a\ get\ method\ of\ the\ variable\ appointedDate.\r\n\ It\ returns\ the\ value\ of\ appointedDate\ if\ the\ get\ method\ is\ called\ in\ other\ classes\ or\ subclasses.\r\n\ It\ returns\ the\ value\ of\ same\ datatype\ i.e.\ string.\r\n
comment4.params=
comment4.target=java.lang.String\ getEvaluationPeriod()
comment4.text=\r\n\ This\ is\ a\ get\ method\ of\ the\ variable\ evaluationPeriod.\r\n\ It\ returns\ the\ value\ of\ evaluationPeriod\ if\ the\ get\ method\ is\ called\ in\ other\ classes\ or\ subclasses.\r\n\ It\ returns\ the\ value\ of\ same\ datatype\ i.e.\ string.\r\n
comment5.params=
comment5.target=java.lang.String\ getTerminationDate()
comment5.text=\r\n\ This\ is\ a\ get\ method\ of\ the\ variable\ terminationDate.\r\n\ It\ returns\ the\ value\ of\ terminationDate\ if\ the\ get\ method\ is\ called\ in\ other\ classes\ or\ subclasses.\r\n\ It\ returns\ the\ value\ of\ same\ datatype\ i.e.\ string.\r\n
comment6.params=
comment6.target=java.lang.String\ getSpecialization()
comment6.text=\r\n\ This\ is\ a\ get\ method\ of\ the\ variable\ specialization.\r\n\ It\ returns\ the\ value\ of\ specialization\ if\ the\ get\ method\ is\ called\ in\ other\ classes\ or\ subclasses.\r\n\ It\ returns\ the\ value\ of\ same\ datatype\ i.e.\ string.\r\n
comment7.params=
comment7.target=java.lang.String\ getAppointedBy()
comment7.text=\r\n\ This\ is\ a\ get\ method\ of\ the\ variable\ appointedBy.\r\n\ It\ returns\ the\ value\ of\ appointedBy\ if\ the\ get\ method\ is\ called\ in\ other\ classes\ or\ subclasses.\r\n\ It\ returns\ the\ value\ of\ same\ datatype\ i.e.\ string.\r\n
comment8.params=
comment8.target=boolean\ getJoined()
comment8.text=\r\n\ This\ is\ a\ get\ method\ of\ the\ variable\ joined.\r\n\ It\ returns\ the\ value\ of\ joined\ if\ the\ get\ method\ is\ called\ in\ other\ classes\ or\ subclasses.\r\n\ It\ returns\ the\ value\ of\ same\ datatype\ i.e.\ boolean.\r\n
comment9.params=salary
comment9.target=void\ setSalary(int)
comment9.text=\r\n\ This\ is\ a\ set\ method\ to\ set\ salary.\r\n\ It\ is\ made\ as\ the\ variables\ are\ declared\ as\ private\ and\ cannot\ be\ accessed\ in\ other\ classes.\r\n\ So,\ the\ set\ method\ is\ called\ in\ the\ other\ classes\ or\ subclasses\ to\ update\ the\ instance\ varibale,\ salary\ as\ the\ parameter\ in\ the\ method.\ \r\n\ If\ the\ joined\ status\ is\ false,\ the\ method\ takes\ the\ parameter\ and\ updates\ the\ salary\ variables.\r\n\ IF\ the\ joined\ status\ is\ true,\ the\ message\ developer\ name\ is\ already\ appointed\ is\ given.\r\n
numComments=12
